Speaker 1
I wanted to get into the project. Yeah, let's roll.

Speaker 4
Yeah, let's do it.

Speaker 4
So your message, and I'm not going to make you pick one. You're welcome to do both. You're welcome to do more Variety. It's all about initiative. I just don't want to overload anyone. However, if you have the capacities, like, yes, let's collaborate on both.

Speaker 1
Let's do both.

Speaker 4
Let's do all of it. We won't have a shortage of projects counting three right now, which is the personalized outreach system, the knowledge base builder, which I'm trying to finish a prototype for, so then we can proceed to productionizing. And then number three, real estate, which this week obviously deserves high priority.

Speaker 5
Yeah, I think it's better I should focus only my skus in Rag because I need it in the long run, but I can. Just checking up on what you guys are doing on this project here.

Speaker 4
Yeah, that sounds great. Yeah, absolutely. That makes sense. And I'm all for skill specialization.

Speaker 4
Okay, so great segue for where Paige and I are just coming from. We just came from an event about generative AI, and one of the speakers was the product design guy from relevance AI, and he's actually the one that created the sales agent.

Speaker 4
So that is definitely the avenue we're going with. That's the personalized outreach system. That's also the knowledge base builder.

Speaker 4
The second category is new features for products because of AI, and then it's whole new services because of AI.

Speaker 4
The second category is new features for products because of AI, and then it's whole new services because of AI. And we're in that sort of second to third that new features to things, to systems, but also new products based around AI.

Speaker 4
So that was another question that I got answered by one of the speakers. So how do we ensure privacy and that nothing ever leaves our ecosystem that OpenAI never reads any of the messages or the private information that people send about the houses that they want to buy or how much money they got.

Speaker 4
Live events is where it's at. Not only for community, not only for knowing people in the space, not only for gaining information, but for thinking of new questions that are coming up.

Speaker 4
That being said, right now we have work to do. So let's get to work.

Speaker 4
What questions or clarity can I answer before we dive in?

Speaker 4
I was working on the migration from CSV from a spreadsheet to the CRM and I was having some authentication errors. This is not quite the priority right now, though. We will need to solve it. Looked at the docs and there was no straightforward answer. So we'll get around to that. What we're working on right now is the setup task from text message. We have the examples.

Speaker 1
I mean, to make the prompt sort of mirroring the agent role, the real human that is getting the phone, the texting, so the AI will get the context of who is this and who make those appointments or whatever the event will be. Yeah, so we will have context.

Speaker 4
So could you help me with two things right now? Number one, creating the initial prompt that we can use to test this and we can show it the examples and all this stuff.

Speaker 4
So before I do that, going back to the first question, should we require confirmation, some affirmation? It'll definitely help with reliability, which is one of the, we don't want any false positives.

Speaker 1
I think we can have like if the person agree, then make an event. So if the sentiment is person agreed, then the trigger happens.

Speaker 3
Just trying to be thorough here.

Speaker 4
Posted in the real estate client.

Speaker 1
And I'm thinking I could use also if you could write a sentence about the role, like stating the exact role.Speaker 3
Use cases auto assistant scheduler. 

Speaker 4
Okay, so I'm going to. 

Speaker 3
This context. Auto scheduler assistant purpose for real estate agents. So analyze incoming text messages and determine if an appointment needs to be set. Analyze text message conversation. 

Speaker 4
Okay, great. 

Speaker 1
There it is. 

Speaker 4
Check the real estate clients chat. 

Speaker 3
We're back here, we're setting up an. 

Speaker 4
Agent, and I know that we have. 

Speaker 3
Setting up an agent, which I should definitely know by heart, but I don't. 

Speaker 4
So let's find it. 

Speaker 3
Replicate this is solutions. Of course. There we go. No, this one didn't have an agent in it. What I do remember, Bartek, do you. 

Speaker 4
Remember by heart how to create an. 

Speaker 3
Agent with an assistant API? 

Speaker 1
I think in replica to have a template for that. 

Speaker 3
You do? 

Speaker 1
I think there is something like that. There is definitely a template for OpenAI GPT call through API. Yeah, that should be also assistant. 

Speaker 3
Okay, there we go. 

Speaker 1
Well, guess what if I just learned fusion prompting through this example. 

Speaker 3
Nice. That's funny. System file client files create. Yes, it's creating. 

Speaker 1
So you want to trigger the follow up boss through the assistance actions. 

Speaker 4
I was thinking about it. The other option, which makes no sense, is to have the assistant output a specific keyword to then trigger the function. And we would have to say if assistant says yes, or if output is yes, then we would have to ask the assistant for the details of the. 

Speaker 3
Appointment that needs to be set. 

Speaker 4
It just feels way more clunky than giving the assistant the function. And it can figure out, is there a time, is there a date, is there a place, and just run the function itself. 

Speaker 1
Yeah, I think so. 

Speaker 4
We are adding some stochasticity into it, but we're at the point where we can probably trust that. 

Speaker 3
I'd be very surprised if weren't able to. Okay, well, this is the function. 

Speaker 1
I think it's good then because I was wondering because the prompt is having the follow up boss kind of trigger in it. But I guess if we have the assistant with action, then it will work just fine. 

Speaker 4
Oh, you're saying that the prompt says, I got confused. 

Speaker 3
Would you say that one more time? 

Speaker 1
The prompt have the trigger kind of function in it for the follow up. Boss. Maybe I'll just throw it into the discord because I had to make a file for it, though I probably put them later in the GitHub. For now it's only one. 

Speaker 4
Yeah, we're going to have versioning with that, man, because it's going to get very messy very quickly. 

Speaker 1
Airtable, I always use vs code for the prompts, right? 

Speaker 4
Just having a different file. 

Speaker 3
Yeah. 

Speaker 4
And Kuba, we'll talk about modularizing your code. When it was on notebooks, it was easier to keep track of it. Now that it's one all big file with like 600 lines of code in GitHub, it's much harder. But what you did in notebooks, it's great. It's very easy to follow. We'll have to figure out how we match both those things like version control through GitHub, while also having that sort of step by step feel where we can test something. It breaks, we know where to look. 

Speaker 3
And all that stuff. So for main py, we want client keeps. Okay. 

Speaker 1
So for now I think that this prompt will be all right since we don't have the rug yet. So we try the fish prompting first and we'll see how that goes. Yeah, drop the repo in the discord. Definitely add more examples. I think you could take those two example lines from the prompt and have them into, I don't know if you're showing a presentation deck or whatever, you can show them to the client and let them ask them if they see more affirmative replies or keywords. Use our keywords for the keywords related to appointments there in the prompts. And also there are the affirmative replies. So as usual, tell the client that the more the better. Maybe they want to take that home or they want to answer on the call, whatever. 

Speaker 3
Okay. If a response confirms an appointment. 

Speaker 4
Oh, it just learned fusion prompting. 

Speaker 3
That's funny. 

Speaker 4
It's very funny. 

Speaker 1
You see the prompt? Yeah, it's never the official prompting before. I think it was because of I prompted it with the examples. 

Speaker 4
Yeah, right. 

Speaker 3
Okay. 

Speaker 4
How can I look at the markdown? 

Speaker 3
There we go. Okay, so now I'm going back and in the assistant, the whole thing is assistant prompt system prompt. 

Speaker 1
Oh, and by the way, I have first version of the upwork system, so we can plug the API in there and have it running all the way around. 

Speaker 3
Cool. 

Speaker 1
I would like to have people who want to do upwork maybe on the call, like make an upwork team and stuff. And then because I imagine this. We got that rolling whole day, and we just catch all the best jobs to the to airtable and then have somebody, let's say we have four people in there. So every 3 hours one of those people just go and check it. And then, okay, we have cool project in here. I write proposal. I tell the team, okay, I wrote proposal. Okay, you'll hear it. 

Speaker 2
Go. 

Speaker 1
And then if we get answer, we get a call and we start the project. What are you guessing? 

Speaker 5
Makes sense, bro. 

Speaker 4
Yeah. 

Speaker 5
Awesome. 

Speaker 6
Vertech. 

Speaker 3
Yeah. 

Speaker 1
But on the other hand, I'm now second guessing if we have the people for that. 

Speaker 2
Sorry. 

Speaker 6
If we have what? 

Speaker 1
If we have people, if we have capacity. 

Speaker 6
If you offer money, people will do the work. So have the projects first and have the problem of low capacity later. 

Speaker 1
Yeah, but I'm also talking about managing the stuff. Somebody needs to still look at those offers, make the proposals, because AI proposal won't get you a job. I already experienced that. So you need to really use your user brain to write. 

Speaker 2
I see. 

Speaker 6
Okay, well, let's go step by step. Let's look at that V one together and we can go from there. Because you do have another great brain for that, Zach. For something like a proposal and for just churning them. So let's talk about it later. 

Speaker 2
For identifying messages that require action. That require an action. 

Speaker 6
So it will know that it can call. Okay, could you help me with jumping into the notebook and setting up the tool? The tool is going to be the function create task. The function is down here below. I just don't remember the syntax for creating a function call. 

Speaker 1
All right, I was reading the prompt. Yeah, I also don't know that by HUD. We will have to check it somewhere. I think I got a better prompt, by the way, because I ordered PFA to make it only task classifier prompt rather than do everything. 

Speaker 6
Well, then show it the code here. I'll wait. 

Speaker 2
The payload also needs to include the time of thing, so give me a second and I can share with you. 

Speaker 1
The second prompt also makes category and urgency. 

Speaker 6
What did you say, kuba? 

Speaker 5
I heard you guys talking about like a templates for function calling, right? Yeah, I think I have something. Let me share. 

Speaker 6
Oh yeah. 

Speaker 2
Awesome. Thanks, man. Wouldn't it be tasked? 

Speaker 6
Oh, activities is tasked. 

Speaker 2
Okay. 

Speaker 1
I think you could call, if you have in the sidebar some kind of GPT that does open up a schema, you could just call a mansion in here and have it in the schema. 

Speaker 2
Can you show me what you mean? 

Speaker 1
I mean, there is those GPTs you can just search them on the store and those GPTs, some of them like open up schema creator or whatever. And then with the mention thing you can use your chat that you were just showing second before with this assistant you made and call the open episode to make you the function. 

Speaker 6
Of course you can. Oh my God, that's such a good idea, dude. Okay. Yes. 

Speaker 1
My brain unlocked when I started using mentions for the PFA and now I see the use case. Cool. 

Speaker 6
Oh that's awesome. 

Speaker 2
Want to do date? Nice. Required. This is something we want. The default is going to be tomorrow 09:00 a.m. 

Speaker 6
So say yes. 

Speaker 2
Generate. 

Speaker 6
You want to generate daytime? 

Speaker 2
Which daytime? For tomorrow at 09:00 a.m. Daytime today you add plus one and then you say 09:00 a.m.. Cool. 

Speaker 6
Michelle. Yeah, that's awesome. 

Speaker 2
Big time now plus one. Okay, cool. That works. Nice. So we know that is tomorrow. That means tomorrow at 09:00 a.m. So then we're using this to create a task and due date is going. 

Speaker 6
To be by default going to be tomorrow at 09:00 a.m. 

Speaker 2
So death default time tomorrow 09:00 a.m. Description is going to be description and then person Id. Is going to be person Id. 

Speaker 6
This task is just going to be a task. 

Speaker 2
We just want to create a task. Okay, so then this works. These are the fields we can use. This is the assistant and you guys sent something. Awesome. Student custom function. 

Speaker 6
One of my questions is where do I. Never mind, I see it. Thanks. 

Speaker 2
So as I am creating, so for. 

Speaker 6
The assistance API, does that fall under tools? Does that fall under like this? Then we're going to have some required. 

Speaker 2
And some non required. So we have person type description. Due date type is just going to be task. We can say, hey, this is always type is going to be description. 

Speaker 1
Some kind of AI assistant in this collab. 

Speaker 6
What do you mean? 

Speaker 1
I see something like colab AI in the right side. 

Speaker 6
Oh yeah. Just below this code for me. 

Speaker 2
All right. 

Speaker 6
Yeah, I didn't even try it but I guess we can try create an. 

Speaker 2
Assistant using the assistant API. Agent using assistance API with data for system. 

Speaker 6
I have a strong feeling that google is not trying to promote OpenAI's code. This is not the right code. This is not the right function call. This is the old version. 

Speaker 2
So that's that. Let's see it. 

Speaker 6
Totally caught the prompt though. Yay. 

Speaker 2
This is the right one. 

Speaker 6
But it just copied the code from. 

Speaker 2
Up here so that doesn't count. Let me change with a function call to. 

Speaker 6
Yeah, I just copying the code that we just used. 

Speaker 2
Okay, well, that didn't quite work. It's just copying the code over and overload. Not quite. Okay, where were we? Send something to the group that something was the function. So what we need to do is say a, this is not students custom function, but it's actually called create task. F u b. Custom function type retrieval type function. 

Speaker 6
Oh, I remember this type function. 

Speaker 2
Call. 

Speaker 6
I remember one of these that had. 

Speaker 2
Actual function that did some math on chat function. Yeah, we would probably need to repeat this as well that we're running. 

Speaker 6
Hey, there's a chat. We need to get the thread id if it doesn't exist, if it's a new conversation. 

Speaker 2
Okay, we'll see what this looks like in practice because I'm not sure. 

Speaker 6
What we know is that there's a thread that gets created with a certain thread ID. 

Speaker 2
Content is going to be user input. Great. So we have a message, we have a thread ID, and. 

Speaker 4
Guys, we gotta. 

Speaker 1
Jump off for 15 minutes. You still be in this call or you're just finishing? 

Speaker 6
We need to finish the sales deck, so we will definitely continue. And if you can help me with tuning. 

Speaker 1
The prompt, I already put second version in the same repo. There is the sort of more focused on task classifier thing, right? So you can check those two, how they work. And later maybe after your conversation with the client, after we get more of those keywords, of those affirmative replies and examples of the messages themselves, then I think we can go really and test those prompts against each other, either in prompt or. I have also like two or three tools for testing to check out and I don't have time for them. 

Speaker 6
Okay, let's stick with prompt foo then. Let's stick with what works and what we know. And maybe that's what we do. A small workshop out of which is great content. It's like, hey, testing your LLM is super hard. This is something that makes it easier. And this is how we made it to build an actual product for a client. 

Speaker 2
Boom. 

Speaker 6
Video. 

Speaker 1
Yeah, that's great. Although I think prompt for it's a bit clunky, but yeah, we can definitely go over that and then later go over some muting. That is even better. Yeah, sounds great. 

Speaker 6
Now we're thinking of like the second version of the video. Great, wonderful. We'll get to all of it. Just got to keep grinding. 

Speaker 1
All right. 

Speaker 6
I'm going to make this custom function and then I'm going to go focus on finishing the sales deck with Paige, who's doing the grunt of the work for that. 

Speaker 2
Thank you, Paige. 

Speaker 6
So I'll see you, Bartek. 

Speaker 2
Later. 

Speaker 6
Kuba, I will see you later. Connect soon. Tomorrow. My tomorrow. 

Speaker 2
About pfa self. Bartech. 

Speaker 4
Yeah. 

Speaker 1
And also, let's schedule the upwork thing to go over that. 

Speaker 2
Yeah, good. 

Speaker 6
Awesome. I will send you two documents that I would like us to start. We're going to have a whole knowledge base. All the documents. There's two documents that I'd like us to start being able to do rag on. 

Speaker 5
All right, cool. I said, should we catch up, like, later today to talk about it? 

Speaker 6
So later today means tomorrow for me. I could do after the business call at 10:00 a.m. Our time, 11 hours from now. 

Speaker 5
11 hours. That will be okay. Yeah, it works. I'll be awake. I'll still be awake by that time. 

Speaker 6
Okay. Or we can start async and we connect tomorrow. 

Speaker 5
All right. Same time tomorrow. 

Speaker 6
I will confirm the time, but let's meet, you and I, and we can talk. There's a couple of things I'd like to show you and we could get to work on. I didn't even tell you what it was. The knowledge base builder. So essentially getting to work on the knowledge base builder so we can finally have an assistant that can help us through so much of this. 

Speaker 2
Yeah, that's all. 

Speaker 5
All right, cool. 

Speaker 6
There's a couple of documents that I'd like to start on, so I'll send them to you, and you can look at that, and we'll go from there. 

Speaker 5
All right, cool. We'll catch up tomorrow. 

Speaker 6
Catch up tomorrow then. 

Speaker 5
Bye, then. Cool. 